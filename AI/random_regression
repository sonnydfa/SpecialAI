import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import joblib

# CSV 파일 읽기
data = pd.read_csv('a.csv')

# 데이터 확인
print(data.head())

# 피처와 타겟 분리 (예시: 마지막 열이 타겟 변수인 경우)
X = data.iloc[:, :-1]
y = data.iloc[:, -1]

# 학습 데이터와 테스트 데이터로 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 랜덤 포레스트 회귀 모델 생성
rf = RandomForestRegressor(n_estimators=100, random_state=42)

# 모델 학습
rf.fit(X_train, y_train)

# 모델 저장
joblib.dump(rf, 'random_forest_model.pkl')

# 모델 불러오기
loaded_rf = joblib.load('random_forest_model.pkl')

# 테스트 데이터 예측을 위해 test.csv 파일 읽기
test_data = pd.read_csv('test.csv')

# 예측 (예시로 test.csv 파일의 구조가 a.csv와 동일하다고 가정)
X_test_new = test_data.copy()
y_pred_new = loaded_rf.predict(X_test_new)

# 예측 결과를 pred 열로 추가
test_data['pred'] = y_pred_new

# 수정된 test.csv 파일 저장
test_data.to_csv('test_with_predictions.csv', index=False)

# 성능 평가 (원래 test set에 대해서)
y_pred = loaded_rf.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
