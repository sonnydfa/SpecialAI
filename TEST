{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["# 경고메세지 끄기\n","import warnings\n","warnings.filterwarnings(action='ignore')"],"metadata":{"id":"klS5wZ7x6LUB","executionInfo":{"status":"ok","timestamp":1715449535793,"user_tz":-540,"elapsed":7,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["#!pip install transformers==4.18.0"],"metadata":{"id":"YrHOyHYv6Tz2","executionInfo":{"status":"ok","timestamp":1715449535794,"user_tz":-540,"elapsed":7,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import tensorflow as tf\n","import transformers\n"],"metadata":{"id":"wy5lSFAN6YXH","executionInfo":{"status":"ok","timestamp":1715449542536,"user_tz":-540,"elapsed":6749,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["print(transformers.__version__) # 4.18.0\n","print(tf.__version__) # 2.4.2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VcuVUaNT6nkg","executionInfo":{"status":"ok","timestamp":1715449542537,"user_tz":-540,"elapsed":20,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"802f8907-9597-4891-b3f6-2cca63a1af8a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["4.40.2\n","2.15.0\n"]}]},{"cell_type":"code","source":["# pandas read_excel 함수사용하기 위해 xlrd, openpyxl 설치 필요\n","#!pip install openpyxl"],"metadata":{"id":"ySBo0fcR6yfo","executionInfo":{"status":"ok","timestamp":1715449542537,"user_tz":-540,"elapsed":19,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# A_comment_train.xlsx, A_comment_test.xlsx A방송사 댓글 다운로드 및 Pandas read_excel() 함수 활용하여 읽고 합치기\n","\n","#comment_train = pd.read_excel('https://github.com/gzone2000/TEMP_TEST/raw/master/A_comment_train.xlsx', engine='openpyxl')\n","#comment_test = pd.read_excel('https://github.com/gzone2000/TEMP_TEST/raw/master/A_comment_test.xlsx', engine='openpyxl')\n","\n","#comment = pd.concat([comment_train, comment_test])\n","\n","comment = pd.read_csv('train_3type.csv', encoding='cp949')\n","\n","comment"],"metadata":{"id":"zl5KS3Aa61Yb","executionInfo":{"status":"ok","timestamp":1715449543124,"user_tz":-540,"elapsed":605,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"6a2bac29-4064-48d7-8acc-a7853ba74a29"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       감정                                                 문장\n","0      기쁨                      퇴사한 지 얼마 안 됐지만 천천히 직장을 구해보려고.\n","1      기쁨                           요즘 직장생활이 너무 편하고 좋은 것 같아!\n","2      기쁨                           취업해야 할 나이인데 취업하고 싶지가 않아.\n","3      기쁨                              우리 회사는 정말 사내 분위기가 좋아.\n","4      기쁨                  오늘 내가 다니는 회사가 참 좋은 직장이라는 생각이 들었어.\n","...    ..                                                ...\n","24037  분노  아이들이 커가면서 돈이 더 많이 들어가. 애들한테 돈 때문에 못 해준 게 있을까 봐...\n","24038  분노            늙어가는 게 느껴져. 이제 일할 때도 힘이 부족하단 걸 느껴서 속상해.\n","24039  분노         남편이 내 곁을 떠났어. 아무것도 못 해준 내가 실망스럽고 자꾸 눈물이 나.\n","24040  분노  건강관리를 너무 안 해서 건강이 좋지 않아 졌어. 주변 사람들에게 폐 끼칠까 봐 걱정돼.\n","24041  분노     나이가 먹고 이제 돈도 못 벌어 오니까 어떻게 살아가야 할지 막막해. 능력도 없고.\n","\n","[24042 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-3934b1df-6951-48d8-9b6a-5bea3a158287\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정</th>\n","      <th>문장</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>기쁨</td>\n","      <td>퇴사한 지 얼마 안 됐지만 천천히 직장을 구해보려고.</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>기쁨</td>\n","      <td>요즘 직장생활이 너무 편하고 좋은 것 같아!</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>기쁨</td>\n","      <td>취업해야 할 나이인데 취업하고 싶지가 않아.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>기쁨</td>\n","      <td>우리 회사는 정말 사내 분위기가 좋아.</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>기쁨</td>\n","      <td>오늘 내가 다니는 회사가 참 좋은 직장이라는 생각이 들었어.</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24037</th>\n","      <td>분노</td>\n","      <td>아이들이 커가면서 돈이 더 많이 들어가. 애들한테 돈 때문에 못 해준 게 있을까 봐...</td>\n","    </tr>\n","    <tr>\n","      <th>24038</th>\n","      <td>분노</td>\n","      <td>늙어가는 게 느껴져. 이제 일할 때도 힘이 부족하단 걸 느껴서 속상해.</td>\n","    </tr>\n","    <tr>\n","      <th>24039</th>\n","      <td>분노</td>\n","      <td>남편이 내 곁을 떠났어. 아무것도 못 해준 내가 실망스럽고 자꾸 눈물이 나.</td>\n","    </tr>\n","    <tr>\n","      <th>24040</th>\n","      <td>분노</td>\n","      <td>건강관리를 너무 안 해서 건강이 좋지 않아 졌어. 주변 사람들에게 폐 끼칠까 봐 걱정돼.</td>\n","    </tr>\n","    <tr>\n","      <th>24041</th>\n","      <td>분노</td>\n","      <td>나이가 먹고 이제 돈도 못 벌어 오니까 어떻게 살아가야 할지 막막해. 능력도 없고.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>24042 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3934b1df-6951-48d8-9b6a-5bea3a158287')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3934b1df-6951-48d8-9b6a-5bea3a158287 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3934b1df-6951-48d8-9b6a-5bea3a158287');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d63c82aa-25c6-4ccf-ad3f-a7bb63015f3f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d63c82aa-25c6-4ccf-ad3f-a7bb63015f3f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d63c82aa-25c6-4ccf-ad3f-a7bb63015f3f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d171d6d0-1c24-4984-917f-9ac5925a82be\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('comment')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d171d6d0-1c24-4984-917f-9ac5925a82be button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('comment');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"comment","summary":"{\n  \"name\": \"comment\",\n  \"rows\": 24042,\n  \"fields\": [\n    {\n      \"column\": \"\\uac10\\uc815\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uae30\\uc068\",\n          \"\\ub2f9\\ud669\",\n          \"\\ubd84\\ub178\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubb38\\uc7a5\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24034,\n        \"samples\": [\n          \"\\ub098\\ub294 \\uc8fc\\uc2dd\\uc744 \\uc131\\uacf5\\ud574\\uc11c \\ub3c8\\uc774 \\uc0dd\\uacbc\\uc5b4.\",\n          \"\\uc644\\uce58 \\ud6c4 \\uc9d1\\uc5d0 \\uc624\\ub2c8 \\uc9c0\\uc778\\ub4e4\\uc774 \\uc120\\ubb3c\\uc774 \\ub9ce\\uc774 \\uc640\\uc788\\ub2e4. \\uc778\\uc0dd \\uc798 \\uc0b0 \\uac83 \\uac19\\uc544\\uc11c \\uae30\\ubed0.\",\n          \"\\ud68c\\uc0ac\\uc5d0\\uc11c \\uc0c1\\uc0ac\\uac00 \\ub098\\ud55c\\ud14c \\ub0a8\\uc790\\uce5c\\uad6c \\uc788\\ub0d0\\uace0 \\ubb3c\\uc5b4\\ubd24\\ub294\\ub370 \\ub108\\ubb34 \\ub2f9\\ud669\\uc2a4\\ub7ec\\uc6e0\\uc5b4.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":[],"metadata":{"id":"l8Lhi3KCryuP"}},{"cell_type":"code","source":["# 상위 5개 출력\n","comment.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"B1WMRM0_7BZD","executionInfo":{"status":"ok","timestamp":1715449543125,"user_tz":-540,"elapsed":20,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"df0ecae6-2731-4593-aa04-d495ae3a4c9f"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   감정                                 문장\n","0  기쁨      퇴사한 지 얼마 안 됐지만 천천히 직장을 구해보려고.\n","1  기쁨           요즘 직장생활이 너무 편하고 좋은 것 같아!\n","2  기쁨           취업해야 할 나이인데 취업하고 싶지가 않아.\n","3  기쁨              우리 회사는 정말 사내 분위기가 좋아.\n","4  기쁨  오늘 내가 다니는 회사가 참 좋은 직장이라는 생각이 들었어."],"text/html":["\n","  <div id=\"df-f3ac0684-27ef-4103-baeb-5bacb1a81cab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정</th>\n","      <th>문장</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>기쁨</td>\n","      <td>퇴사한 지 얼마 안 됐지만 천천히 직장을 구해보려고.</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>기쁨</td>\n","      <td>요즘 직장생활이 너무 편하고 좋은 것 같아!</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>기쁨</td>\n","      <td>취업해야 할 나이인데 취업하고 싶지가 않아.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>기쁨</td>\n","      <td>우리 회사는 정말 사내 분위기가 좋아.</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>기쁨</td>\n","      <td>오늘 내가 다니는 회사가 참 좋은 직장이라는 생각이 들었어.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3ac0684-27ef-4103-baeb-5bacb1a81cab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3ac0684-27ef-4103-baeb-5bacb1a81cab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3ac0684-27ef-4103-baeb-5bacb1a81cab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7bb88611-ed1f-4615-8f4a-a331a308a60a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7bb88611-ed1f-4615-8f4a-a331a308a60a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7bb88611-ed1f-4615-8f4a-a331a308a60a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"comment","summary":"{\n  \"name\": \"comment\",\n  \"rows\": 24042,\n  \"fields\": [\n    {\n      \"column\": \"\\uac10\\uc815\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"\\uae30\\uc068\",\n          \"\\ub2f9\\ud669\",\n          \"\\ubd84\\ub178\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubb38\\uc7a5\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 24034,\n        \"samples\": [\n          \"\\ub098\\ub294 \\uc8fc\\uc2dd\\uc744 \\uc131\\uacf5\\ud574\\uc11c \\ub3c8\\uc774 \\uc0dd\\uacbc\\uc5b4.\",\n          \"\\uc644\\uce58 \\ud6c4 \\uc9d1\\uc5d0 \\uc624\\ub2c8 \\uc9c0\\uc778\\ub4e4\\uc774 \\uc120\\ubb3c\\uc774 \\ub9ce\\uc774 \\uc640\\uc788\\ub2e4. \\uc778\\uc0dd \\uc798 \\uc0b0 \\uac83 \\uac19\\uc544\\uc11c \\uae30\\ubed0.\",\n          \"\\ud68c\\uc0ac\\uc5d0\\uc11c \\uc0c1\\uc0ac\\uac00 \\ub098\\ud55c\\ud14c \\ub0a8\\uc790\\uce5c\\uad6c \\uc788\\ub0d0\\uace0 \\ubb3c\\uc5b4\\ubd24\\ub294\\ub370 \\ub108\\ubb34 \\ub2f9\\ud669\\uc2a4\\ub7ec\\uc6e0\\uc5b4.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["comment.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UhreqreJ7QT2","executionInfo":{"status":"ok","timestamp":1715449543126,"user_tz":-540,"elapsed":17,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"f9b5b6f2-0a52-4ab0-8e91-f757e6737e98"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["감정    0\n","문장    0\n","dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# label 컬럼에 대해 부정 -> 0, 긍정 -> 1 변환\n","\n","#comment['label'] = comment['label'].replace(['부정','긍정'],[0,1])\n","from sklearn.preprocessing import LabelEncoder\n","\n","encoder = LabelEncoder()\n","comment['감정'] = encoder.fit_transform(comment['감정'])\n","encoder.classes_"],"metadata":{"id":"3SVGSvS77oM7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715449543586,"user_tz":-540,"elapsed":475,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"0da6d19f-399b-4079-bc78-9ef009eceb56"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['기쁨', '당황', '분노'], dtype=object)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# 하위 5개 출력\n","comment.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"z6mie94U7zln","executionInfo":{"status":"ok","timestamp":1715449543587,"user_tz":-540,"elapsed":19,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"b9291f32-b84b-4af5-fbbd-18c17090ab40"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       감정                                                 문장\n","24037   2  아이들이 커가면서 돈이 더 많이 들어가. 애들한테 돈 때문에 못 해준 게 있을까 봐...\n","24038   2            늙어가는 게 느껴져. 이제 일할 때도 힘이 부족하단 걸 느껴서 속상해.\n","24039   2         남편이 내 곁을 떠났어. 아무것도 못 해준 내가 실망스럽고 자꾸 눈물이 나.\n","24040   2  건강관리를 너무 안 해서 건강이 좋지 않아 졌어. 주변 사람들에게 폐 끼칠까 봐 걱정돼.\n","24041   2     나이가 먹고 이제 돈도 못 벌어 오니까 어떻게 살아가야 할지 막막해. 능력도 없고."],"text/html":["\n","  <div id=\"df-577ae286-fadc-439d-a499-aa669197265b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정</th>\n","      <th>문장</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24037</th>\n","      <td>2</td>\n","      <td>아이들이 커가면서 돈이 더 많이 들어가. 애들한테 돈 때문에 못 해준 게 있을까 봐...</td>\n","    </tr>\n","    <tr>\n","      <th>24038</th>\n","      <td>2</td>\n","      <td>늙어가는 게 느껴져. 이제 일할 때도 힘이 부족하단 걸 느껴서 속상해.</td>\n","    </tr>\n","    <tr>\n","      <th>24039</th>\n","      <td>2</td>\n","      <td>남편이 내 곁을 떠났어. 아무것도 못 해준 내가 실망스럽고 자꾸 눈물이 나.</td>\n","    </tr>\n","    <tr>\n","      <th>24040</th>\n","      <td>2</td>\n","      <td>건강관리를 너무 안 해서 건강이 좋지 않아 졌어. 주변 사람들에게 폐 끼칠까 봐 걱정돼.</td>\n","    </tr>\n","    <tr>\n","      <th>24041</th>\n","      <td>2</td>\n","      <td>나이가 먹고 이제 돈도 못 벌어 오니까 어떻게 살아가야 할지 막막해. 능력도 없고.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-577ae286-fadc-439d-a499-aa669197265b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-577ae286-fadc-439d-a499-aa669197265b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-577ae286-fadc-439d-a499-aa669197265b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2058af07-9ee8-4900-a23c-23c3fcbd29aa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2058af07-9ee8-4900-a23c-23c3fcbd29aa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2058af07-9ee8-4900-a23c-23c3fcbd29aa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"comment\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"\\uac10\\uc815\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubb38\\uc7a5\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"\\ub299\\uc5b4\\uac00\\ub294 \\uac8c \\ub290\\uaef4\\uc838. \\uc774\\uc81c \\uc77c\\ud560 \\ub54c\\ub3c4 \\ud798\\uc774 \\ubd80\\uc871\\ud558\\ub2e8 \\uac78 \\ub290\\uaef4\\uc11c \\uc18d\\uc0c1\\ud574.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# comment dataframe 정보 확인\n","comment.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SZBHT-Zc79Zd","executionInfo":{"status":"ok","timestamp":1715449543587,"user_tz":-540,"elapsed":17,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"cacc06f0-931d-4979-90af-9d58613e6346"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 24042 entries, 0 to 24041\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   감정      24042 non-null  int64 \n"," 1   문장      24042 non-null  object\n","dtypes: int64(1), object(1)\n","memory usage: 375.8+ KB\n"]}]},{"cell_type":"code","source":["# X : data 컬럼과 y : label 컬럼 가져오기\n","# ndarray로 하면 에러가 나므로 리스트로 만들어야 함.\n","\n","X = comment['문장'].to_list()\n","y = comment['감정'].to_list()\n","#X = comment.data.to_list()\n","#y = comment.label.to_list()\n","X[:5]\n"],"metadata":{"id":"YPmJ1Eyb_14c","executionInfo":{"status":"ok","timestamp":1715449543588,"user_tz":-540,"elapsed":16,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"10e6779e-2b9f-4f7f-f9b8-5b3c159cd5cd"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['퇴사한 지 얼마 안 됐지만 천천히 직장을 구해보려고.',\n"," '요즘 직장생활이 너무 편하고 좋은 것 같아!',\n"," '취업해야 할 나이인데 취업하고 싶지가 않아.',\n"," '우리 회사는 정말 사내 분위기가 좋아.',\n"," '오늘 내가 다니는 회사가 참 좋은 직장이라는 생각이 들었어.']"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# 데이터를 Train, Test 데이터셋으로 나누기\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.2,random_state=48)"],"metadata":{"id":"nXoPmQx4_3bp","executionInfo":{"status":"ok","timestamp":1715449543588,"user_tz":-540,"elapsed":13,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# X_train, X_test 사이즈 확인\n","len(X_train), len(X_test), len(y_train), len(y_test)"],"metadata":{"id":"x6x57hUwAzgn","executionInfo":{"status":"ok","timestamp":1715449543590,"user_tz":-540,"elapsed":14,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"b5a16ac4-d2a5-4e44-a9c4-6dbefa118cd0"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(19233, 4809, 19233, 4809)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# X_train 데이터 샘플 확인\n","X_train[:2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fh5x9tGcBUPz","executionInfo":{"status":"ok","timestamp":1715449543590,"user_tz":-540,"elapsed":12,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"971f16c4-1412-4ff6-da5a-54b348ec0f53"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['이번에 시험을 봤는데 백 점을 맞아서 만족스러워.', '아무리 열심히 해도 되지 않는걸 보니 나는 머리가 나쁜가봐.']"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# 한글 BERT Model\n","bert_model = 'klue/bert-base'"],"metadata":{"id":"1jd1UFO9B155","executionInfo":{"status":"ok","timestamp":1715449543591,"user_tz":-540,"elapsed":10,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# transformers는 자연어처리를 위해 Pre-Trained BERT, GPT 모델 제공한다.\n","# transformers의 Config , Tokenizer, SequenceClassification  임포트\n","# PreTrained 된 \"klue/bert-base\" BERT 모델의 tokenizer 가져오기\n","\n","from transformers import AutoConfig, BertTokenizerFast, TFBertForSequenceClassification\n","tokenizer = BertTokenizerFast.from_pretrained(bert_model)"],"metadata":{"id":"n4Fq6woeClZ_","executionInfo":{"status":"ok","timestamp":1715449545576,"user_tz":-540,"elapsed":1995,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# tokenizer의 vocab 사이즈 확인\n","tokenizer.vocab_size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4UP0HrB5S-Np","executionInfo":{"status":"ok","timestamp":1715449545577,"user_tz":-540,"elapsed":9,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"df40c5d1-25b6-4759-84cc-1927e855fb05"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["32000"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# tokenizer의 vocab 리스트\n","#tokenizer.vocab"],"metadata":{"id":"926Ou79oTGcl","executionInfo":{"status":"ok","timestamp":1715449545578,"user_tz":-540,"elapsed":9,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# X_train, X_test 데이터를 토큰 > 정수ids > padding  수행\n","\n","train_encodings = tokenizer(X_train, truncation=True, padding=True)\n","test_encodings = tokenizer(X_test, truncation=True, padding=True)"],"metadata":{"id":"k1EILZmFToHi","executionInfo":{"status":"ok","timestamp":1715449550957,"user_tz":-540,"elapsed":5387,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["# train input_ids : 문장을 숫자 매핑하는 keras Tokenizer의 texts_to_sequences + pad_sequences 후의 결과값\n","print(train_encodings['input_ids'][0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q-4wbnUvmn_J","executionInfo":{"status":"ok","timestamp":1715449550958,"user_tz":-540,"elapsed":20,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"40028d6b-d8c3-43cb-a4a9-26bc9542bd0e"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 3686, 2170, 4448, 2069, 1170, 13964, 1132, 1540, 2069, 18556, 2112, 4671, 2255, 8405, 18, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"]}]},{"cell_type":"code","source":["# test input_ids\n","print(test_encodings['input_ids'][0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O6j1BDmymteL","executionInfo":{"status":"ok","timestamp":1715449550959,"user_tz":-540,"elapsed":19,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"250e1c7c-4242-4623-9ad6-7eaf66b5f2b0"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 6764, 2255, 2146, 23677, 2112, 3646, 27135, 7957, 2205, 2118, 4047, 2051, 18, 3760, 8184, 2125, 2052, 2275, 18, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"]}]},{"cell_type":"code","source":["# 반드시 입력할 데이터를 tensorflow Dataset 형태로 만들어야 함\n","\n","train_dataset = tf.data.Dataset.from_tensor_slices((dict(train_encodings), y_train))\n","train_dataset = train_dataset.shuffle(1000).batch(16).cache().prefetch(tf.data.experimental.AUTOTUNE)\n","\n","test_dataset = tf.data.Dataset.from_tensor_slices((dict(test_encodings), y_test))\n","test_dataset = test_dataset.batch(16).cache().prefetch(tf.data.experimental.AUTOTUNE)"],"metadata":{"id":"PHWk85ipmvcR","executionInfo":{"status":"ok","timestamp":1715449572897,"user_tz":-540,"elapsed":21955,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["# klue/bert-base BERT config 확인\n","# architectures : BertForMaskedLM\n","\n","config = AutoConfig.from_pretrained(bert_model)\n","config"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QiUsVIynmxBB","executionInfo":{"status":"ok","timestamp":1715449572898,"user_tz":-540,"elapsed":18,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"30f6d3e4-e7dc-472c-d29d-7ae5bd6a64dd"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BertConfig {\n","  \"_name_or_path\": \"klue/bert-base\",\n","  \"architectures\": [\n","    \"BertForMaskedLM\"\n","  ],\n","  \"attention_probs_dropout_prob\": 0.1,\n","  \"classifier_dropout\": null,\n","  \"hidden_act\": \"gelu\",\n","  \"hidden_dropout_prob\": 0.1,\n","  \"hidden_size\": 768,\n","  \"initializer_range\": 0.02,\n","  \"intermediate_size\": 3072,\n","  \"layer_norm_eps\": 1e-12,\n","  \"max_position_embeddings\": 512,\n","  \"model_type\": \"bert\",\n","  \"num_attention_heads\": 12,\n","  \"num_hidden_layers\": 12,\n","  \"pad_token_id\": 0,\n","  \"position_embedding_type\": \"absolute\",\n","  \"transformers_version\": \"4.40.2\",\n","  \"type_vocab_size\": 2,\n","  \"use_cache\": true,\n","  \"vocab_size\": 32000\n","}"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# 모델 입력으로  몇개로 분류할지 알려주는 num_labels 인자와\n","# from_pt=True 으로 pytorch 학습된 정보를 tensorflow로 불러올수 있도록 한다.\n","\n","model = TFBertForSequenceClassification.from_pretrained(bert_model, num_labels=3, from_pt=True)\n","from transformers import TFBertForSequenceClassification\n","\n","optimizer = tf.keras.optimizers.Adam(learning_rate=5e-5)\n","model.compile(optimizer=optimizer, loss=model.hf_compute_loss, metrics=['accuracy'])\n","model.fit(train_dataset, epochs=1, batch_size=16, validation_data=(test_dataset))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XifQK-urmzH-","executionInfo":{"status":"ok","timestamp":1715450086228,"user_tz":-540,"elapsed":513346,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"e7dd0582-a200-4d72-d4de-5f59cfc37b75"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFBertForSequenceClassification: ['bert.embeddings.position_ids']\n","- This IS expected if you are initializing TFBertForSequenceClassification from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFBertForSequenceClassification from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights or buffers of the TF 2.0 model TFBertForSequenceClassification were not initialized from the PyTorch model and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n","WARNING:tensorflow:AutoGraph could not transform <function infer_framework at 0x792be9f808b0> and will run it as-is.\n","Cause: for/else statement not yet supported\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n"]},{"output_type":"stream","name":"stdout","text":["WARNING: AutoGraph could not transform <function infer_framework at 0x792be9f808b0> and will run it as-is.\n","Cause: for/else statement not yet supported\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n","1203/1203 [==============================] - 510s 352ms/step - loss: 0.5572 - accuracy: 0.7403 - val_loss: 0.5023 - val_accuracy: 0.7719\n"]},{"output_type":"execute_result","data":{"text/plain":["<tf_keras.src.callbacks.History at 0x792be42b1330>"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["!pip install torch"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rzOROl1Py0om","executionInfo":{"status":"ok","timestamp":1715450180919,"user_tz":-540,"elapsed":67813,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"4291a1d4-9d41-4b4e-83a2-b8624f9bd789"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.2.1+cu121)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.14.0)\n","Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch) (4.11.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.12)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.4)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2023.6.0)\n","Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch)\n","  Using cached nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n","Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch)\n","  Using cached nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch)\n","  Using cached nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n","Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch)\n","  Using cached nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)\n","Collecting nvidia-cublas-cu12==12.1.3.1 (from torch)\n","  Using cached nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n","Collecting nvidia-cufft-cu12==11.0.2.54 (from torch)\n","  Using cached nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n","Collecting nvidia-curand-cu12==10.3.2.106 (from torch)\n","  Using cached nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n","Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch)\n","  Using cached nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n","Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch)\n","  Using cached nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n","Collecting nvidia-nccl-cu12==2.19.3 (from torch)\n","  Using cached nvidia_nccl_cu12-2.19.3-py3-none-manylinux1_x86_64.whl (166.0 MB)\n","Collecting nvidia-nvtx-cu12==12.1.105 (from torch)\n","  Using cached nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n","Requirement already satisfied: triton==2.2.0 in /usr/local/lib/python3.10/dist-packages (from torch) (2.2.0)\n","Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch)\n","  Using cached nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch) (2.1.5)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch) (1.3.0)\n","Installing collected packages: nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12\n","Successfully installed nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.19.3 nvidia-nvjitlink-cu12-12.4.127 nvidia-nvtx-cu12-12.1.105\n"]}]},{"cell_type":"code","source":["import os\n","MODEL_NAME = 'fine-tuned-klue-bert-base'\n","MODEL_SAVE_PATH = os.path.join(\"_model\", MODEL_NAME) # change this to your preferred location\n","\n","if os.path.exists(MODEL_SAVE_PATH):\n","    print(f\"{MODEL_SAVE_PATH} -- Folder already exists \\n\")\n","else:\n","    os.makedirs(MODEL_SAVE_PATH, exist_ok=True)\n","    print(f\"{MODEL_SAVE_PATH} -- Folder create complete \\n\")\n","\n","# save tokenizer, model\n","model.save_pretrained(MODEL_SAVE_PATH)\n","tokenizer.save_pretrained(MODEL_SAVE_PATH)"],"metadata":{"id":"AygsslJBur4N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715450422149,"user_tz":-540,"elapsed":3557,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"6e2bc5d8-245a-441f-a3bf-63ad56831c42"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["_model/fine-tuned-klue-bert-base -- Folder create complete \n","\n"]},{"output_type":"execute_result","data":{"text/plain":["('_model/fine-tuned-klue-bert-base/tokenizer_config.json',\n"," '_model/fine-tuned-klue-bert-base/special_tokens_map.json',\n"," '_model/fine-tuned-klue-bert-base/vocab.txt',\n"," '_model/fine-tuned-klue-bert-base/added_tokens.json',\n"," '_model/fine-tuned-klue-bert-base/tokenizer.json')"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["from transformers import TextClassificationPipeline\n","\n","# Load Fine-tuning model\n","loaded_tokenizer = BertTokenizerFast.from_pretrained(MODEL_SAVE_PATH)\n","loaded_model = TFBertForSequenceClassification.from_pretrained(MODEL_SAVE_PATH)\n","\n","text_classifier = TextClassificationPipeline(\n","    tokenizer=loaded_tokenizer,\n","    model=loaded_model,\n","    framework='tf',\n","    return_all_scores=True\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0iOtGU7q0Lf9","executionInfo":{"status":"ok","timestamp":1715450870812,"user_tz":-540,"elapsed":1618,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"1504265a-5f08-4162-c1e4-d9b863ccbde1"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stderr","text":["Some layers from the model checkpoint at _model/fine-tuned-klue-bert-base were not used when initializing TFBertForSequenceClassification: ['dropout_37']\n","- This IS expected if you are initializing TFBertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFBertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","All the layers of TFBertForSequenceClassification were initialized from the model checkpoint at _model/fine-tuned-klue-bert-base.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFBertForSequenceClassification for predictions without further training.\n"]}]},{"cell_type":"code","source":["loaded_model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wgxKOwU0m10K","executionInfo":{"status":"ok","timestamp":1715450873219,"user_tz":-540,"elapsed":278,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"0aadbf76-7382-4ec0-8c21-b495eeb43367"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"tf_bert_for_sequence_classification_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," bert (TFBertMainLayer)      multiple                  110617344 \n","                                                                 \n"," dropout_75 (Dropout)        multiple                  0 (unused)\n","                                                                 \n"," classifier (Dense)          multiple                  2307      \n","                                                                 \n","=================================================================\n","Total params: 110619651 (421.98 MB)\n","Trainable params: 110619651 (421.98 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["11. 학습된 모델로 test_dataset 예측하기"],"metadata":{"id":"b3WyEUnjolRZ"}},{"cell_type":"code","source":["y_test_pred = loaded_model.predict(test_dataset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CECHUFZWopxR","executionInfo":{"status":"ok","timestamp":1715450922995,"user_tz":-540,"elapsed":42433,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"575bf97c-efaa-4275-f55d-1f82e0a7c42d"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["301/301 [==============================] - 42s 84ms/step\n"]}]},{"cell_type":"code","source":["y_test_pred.logits.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SFNVh6tTotMO","executionInfo":{"status":"ok","timestamp":1715450926167,"user_tz":-540,"elapsed":268,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"83bf62b3-c2bf-4c1f-aba4-9d5141d371a6"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4809, 3)"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["y_test_pred.logits[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f_ITI0xbou5h","executionInfo":{"status":"ok","timestamp":1715450928003,"user_tz":-540,"elapsed":263,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"ee2dc066-8dbe-4eb2-a145-6e0dd0ea3165"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-2.1805668 ,  0.321189  ,  1.1052732 ],\n","       [-1.8281915 ,  0.84003174,  0.42448667],\n","       [-1.9235021 ,  1.0316584 ,  0.1584264 ],\n","       [-1.1629179 ,  0.38194752,  0.17119311],\n","       [-2.1067111 ,  0.35100862,  1.6202508 ],\n","       [-1.8666601 ,  0.647641  ,  0.5660507 ],\n","       [ 4.1590424 , -2.6536367 , -2.5937839 ],\n","       [-0.599927  ,  0.2620343 ,  0.7329525 ],\n","       [ 3.926568  , -2.5075138 , -2.4494243 ],\n","       [-2.2425485 ,  1.47526   ,  0.06396738]], dtype=float32)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# 예측 결과를 DataFrame 넣기\n","\n","df = pd.DataFrame(np.argmax(y_test_pred.logits, axis=1), columns=['predict'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"LKN5j084owsF","executionInfo":{"status":"ok","timestamp":1715450930619,"user_tz":-540,"elapsed":328,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"d4817cb3-f1ba-48f4-bc56-fe481f282c81"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      predict\n","0           2\n","1           1\n","2           1\n","3           1\n","4           2\n","...       ...\n","4804        0\n","4805        1\n","4806        0\n","4807        1\n","4808        1\n","\n","[4809 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-82ff3bca-6b08-457b-8c37-96bbdee39e36\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>predict</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4804</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4805</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4806</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4807</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4808</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4809 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82ff3bca-6b08-457b-8c37-96bbdee39e36')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-82ff3bca-6b08-457b-8c37-96bbdee39e36 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-82ff3bca-6b08-457b-8c37-96bbdee39e36');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8e1d693c-18ad-41f5-97af-3c9b57acf3dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e1d693c-18ad-41f5-97af-3c9b57acf3dd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8e1d693c-18ad-41f5-97af-3c9b57acf3dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_399a734f-8b00-4a31-9507-1faa88825064\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_399a734f-8b00-4a31-9507-1faa88825064 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4809,\n  \"fields\": [\n    {\n      \"column\": \"predict\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["df['true'] = y_test\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Kgx37wy0ozEb","executionInfo":{"status":"ok","timestamp":1715450935826,"user_tz":-540,"elapsed":281,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"01100081-549f-4f03-e8fa-f492d398a17d"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      predict  true\n","0           2     2\n","1           1     1\n","2           1     1\n","3           1     0\n","4           2     2\n","...       ...   ...\n","4804        0     0\n","4805        1     2\n","4806        0     0\n","4807        1     1\n","4808        1     1\n","\n","[4809 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-1544ad40-a638-424c-bcae-952a04248057\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>predict</th>\n","      <th>true</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4804</th>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4805</th>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4806</th>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4807</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4808</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4809 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1544ad40-a638-424c-bcae-952a04248057')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1544ad40-a638-424c-bcae-952a04248057 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1544ad40-a638-424c-bcae-952a04248057');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c0d8cf06-b859-441c-a434-af6b4f44cd42\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0d8cf06-b859-441c-a434-af6b4f44cd42')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c0d8cf06-b859-441c-a434-af6b4f44cd42 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7d34e01b-0e5e-4985-9223-53da42d338c8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7d34e01b-0e5e-4985-9223-53da42d338c8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4809,\n  \"fields\": [\n    {\n      \"column\": \"predict\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"true\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}]},{"source":["# @title predict vs true\n","\n","from matplotlib import pyplot as plt\n","df.plot(kind='scatter', x='predict', y='true', s=32, alpha=.8)\n","plt.gca().spines[['top', 'right',]].set_visible(False)"],"cell_type":"code","execution_count":41,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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V15ent5//31JktPpbOWvCoCWQAACELBiY2O1ZMkSORwO9e3bV/v27dOSJUvsAPQP//APevzxx+36qVOn6uGHH9bs2bMlSbfddptefvllDR8+XK+++qqOHTumP//5z9q1a5fuueceSdLy5ct1xx13NDqG1157TWfOnNF//dd/KSIiQpJ066232uu/973vqUOHDlw2A9oYLoEBCFg/+MEP5HA47NeJiYk6dOiQamtrJUl33323T/1f/vIX5ebm6nvf+569JCUlqa6uTqWlpTpw4IA6dOigIUOG2Nv069dPXbt2bXQMJSUlGjx4sB1+ALQPnAEC0GZ17tzZ53VVVZV++tOf6uc//3m92ptvvll/+9vfmv05OnbseNXjAxC4CEAAAlZRUZHP6507d+q2225TcHBwg/V33XWX/vrXv/pcovq2fv366e9//7uKi4vtS2AHDx5URUVFo2MYNGiQfv/73+u///u/GzwLFBISYp+RAtB2cAkMQMA6duyY0tPTdfDgQa1Zs0a//vWvNWvWrEbrf/nLX+qjjz7SzJkzVVJSokOHDmnTpk2aOXOmJKlv375KTk7WT3/6UxUVFam4uFhTp0697FmeiRMnyuVyKSUlRTt27NBnn32m9evXq7CwUNI3T6OVlpaqpKREZ8+eVU1NTct+EQC0CgIQgICVmpqqr776SkOHDtWMGTM0a9Ys+3H3hgwaNEhbt27V3/72Nw0bNkyDBw/W/PnzFRMTY9esXLlSMTExGj58uH784x/rscceU2RkZKN9hoSE6L333lNkZKR+9KMfaeDAgVq0aJF9Fuqf/umflJycrJEjR6pHjx5as2ZNy30BALQah3XpTTUAIICMGDFC8fHxPn+iAgBaCmeAAACAcQhAAADAOFwCAwAAxuEMEAAAMA4BCAAAGIcABAAAjEMAAgAAxiEAAQAA4xCAAACAcQhAAADAOAQgAABgnP8HCazeZgP1vvMAAAAASUVORK5CYII=\n"},"metadata":{}}],"metadata":{"cellView":"form","colab":{"base_uri":"https://localhost:8080/","height":449},"id":"HugEonC3igk8","executionInfo":{"status":"ok","timestamp":1715450944044,"user_tz":-540,"elapsed":695,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"dbde665e-f49a-4972-aa60-436558108d17"}},{"source":["# @title true\n","\n","from matplotlib import pyplot as plt\n","df['true'].plot(kind='hist', bins=20, title='true')\n","plt.gca().spines[['top', 'right',]].set_visible(False)"],"cell_type":"code","execution_count":null,"outputs":[],"metadata":{"cellView":"form","id":"jabx_wU4ibMQ","executionInfo":{"status":"aborted","timestamp":1715450086233,"user_tz":-540,"elapsed":17,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}}},{"cell_type":"code","source":["np.sum(df['true'] == df['predict'])/len(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n7dqZR8io024","executionInfo":{"status":"ok","timestamp":1715450947724,"user_tz":-540,"elapsed":4,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}},"outputId":"c532ec8c-77c8-47df-fe2d-e36e0cc17e0c"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7718860469952173"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":[],"metadata":{"id":"cI4vWC5Eo2r5","executionInfo":{"status":"aborted","timestamp":1715450086235,"user_tz":-540,"elapsed":18,"user":{"displayName":"Inho Son","userId":"16864266206823282486"}}},"execution_count":null,"outputs":[]}]}
